{
    "collab_server" : "",
    "contents" : "# Reference: \n# http://www.r-bloggers.com/7-functions-to-do-metric-multidimensional-scaling-in-r/\n\nlibrary(plyr)\nlibrary(reshape)\nlibrary(MASS)\nlibrary(smacof)\n\nsource(\"configuration.R\")\nsource(\"commonFunctions.R\")\n\n  DATA_FILE <- \"./inputs/distance_vector_stats_all_channels_4thFl-South-Window-nPacket.csv.txt\"\n#Truth <- 10:1; refnode <-10\nallstats <- read.csv (DATA_FILE, header=TRUE);\nexperimentSet <- unique(allstats$run)\n\nreal_sequence<-as.character(Truth)\n\ndv_type <- \"avg_rssi\"\n\nmds_node_sequence<-vector(\"list\", length(experimentSet))\n\n#all_stats_rssi <- subset(allstats, select=c(run, sender, receiver, avg_rssi))\nall_stats_rssi <- subset(allstats, (sender!=as.character(refnode) & receiver!=as.character(refnode)), select=c(run, sender, receiver, avg_rssi_16packet))\n  real_sequence <- real_sequence[-1]\n\n#all_stats_rssi_distance <- mutate(all_stats_rssi, distance=avg_rssi)\n#all_stats_rssi_distance <- mutate(all_stats_rssi, distance=d_from_mw(Pr=avg_mw, n=3))\n all_stats_rssi_distance <- mutate(all_stats_rssi, distance=d_from_rss(pr=avg_rssi_16packet, n=3))\n\nstartTime <- proc.time()\ncat(length(experimentSet), names(all_stats_rssi_distance)[4],\"\\n\")\n#Error matrix\nErrorMatrix <- matrix (data=NA, nrow=max(allstats$run), ncol=3, byrow=TRUE, dimnames=list(NULL,c(\"expNo\",\"maxError\",\"sumError\")))\n\niteration <- 0\nfor (i in experimentSet) {\n  iteration <- iteration + 1\n  run_rssi_distance <- subset(all_stats_rssi_distance, run==i)\n\n  run_rssi_distance_c <- cast(run_rssi_distance, receiver ~ sender, fill=24, value=\"distance\")\n   # for (r in 1:nrow(run_rssi_distance_c)) run_rssi_distance_c[r,r+1] <- 0\n  \n  run_rssi_distance_d <-as.dist(run_rssi_distance_c)\n\n   #mds_node_coordinates<- cmdscale(run_rssi_distance_d,k=1)\n  mds_node_coordinates<- smacofSym(run_rssi_distance_d,ndim=1, type=\"ratio\")\n  \n  sequence<-names(sort(mds_node_coordinates$conf[,1]))\n  \n  #cat(\"i=\",i,all(sequence==real_sequence),\"\\n\")\n  \n  mds_node_sequence[[iteration]]<-sequence\n  if (sequence[length(sequence)]==real_sequence[[1]]) \n    mds_node_sequence[[iteration]]<-rev(sequence)\n}\n\ncorrect<-lapply(mds_node_sequence, identical, real_sequence)\nlength(correct[correct==TRUE])\n  \nbinaryResults <- c()\nfor(i in 1:length(mds_node_sequence))\n{\n\tbinaryResults <- rbind(binaryResults,all(mds_node_sequence[[i]]==real_sequence))\n\tError <- findError (as.integer(mds_node_sequence[[i]]),as.integer(real_sequence))\n  ErrorMatrix[i,] <- c(i,max(Error),sum(Error))\n}\n\nmeanError <- sum(ErrorMatrix[,\"maxError\"]) / sum(ErrorMatrix[,\"maxError\"] > 0) \n\n## Print Elapsed Time\nendTime <- proc.time()\nprint(endTime-startTime)\n\ncat(paste(\"#RefNode:\",refnode,\"Success:\",sum(binaryResults)), \"out of \", length(binaryResults),\"experiments\",\n    \"MeanError=\", meanError,\"\\n\")\n\n\n#findError (as.integer(mds_node_sequence[[2000]]),as.integer(real_sequence))\n",
    "created" : 1400504240571.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3436191641",
    "id" : "62EEE928",
    "lastKnownWriteTime" : 1406766077,
    "last_content_update" : 0,
    "path" : "~/phd/R/AllScripts/mds_smacof.R",
    "project_path" : "mds_smacof.R",
    "properties" : {
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}