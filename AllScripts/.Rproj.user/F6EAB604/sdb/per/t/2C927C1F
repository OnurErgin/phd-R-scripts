{
    "collab_server" : "",
    "contents" : "library(plyr)\nlibrary(ggplot2)\nlibrary(grid)\nlibrary(reshape)\n\nsource(\"commonFunctions.R\")\n\ntheme_set(theme_bw(10))\n\n\ntheme_update(axis.text.x = element_text(size=10),\n             axis.text.y = element_text(size=10),\n             panel.grid.major = element_line(colour = \"grey90\"),\n             legend.justification = c(1,1),\n             legend.position = c(1,1),\n             legend.box = \"horizontal\",\n             legend.key = element_blank(),\n             legend.background = element_rect(fill=\"white\", size=0.25),\n             panel.background = element_blank())\n\n#set.seed(1234)\n\n\nrss_path_loss <- function(d, pt=0, fc=2.405e9, n=2, d0=1) {\n  lamda <- 2.998e8/fc;\n  pl <- -10*n*log10(lamda/(4*pi*d0)) + 10*n*log10(d/d0);\n  pt-pl\n}\n\nrss_log_normal <- function(d, pt=0, fc=2.405e9, n=2, sigma=1, d0=1) {\n  lamda <- 2.998e8/fc;\n  pl <- -10*n*log10(lamda/(4*pi*d0)) + 10*n*log10(d/d0);\n  pl <- pl + rnorm(1,sd=sigma);\n  pt-pl\n}\n\nPr_in_mW <- function (Pt, fc,d, alpha, h, Pn) {\n  c <- 2.998e8 #speed of light (m/s)\n  lambda <- c/fc;\n  Pr <- (h^2)*Pt*((lambda/(4*pi*d))^alpha) + Pn^2\n  return(Pr)\n}\nd <- seq(1,10,by=0.1)\n\nn<-3\n\nmean_rayleigh<-0.71; sd_rayleigh<-1\nmean_rayleigh<-0; sd_rayleigh<-15\nsd_noise_dbm <- -45; sd_noise_mW <- dbm2mw (sd_noise_dbm)\n\nawgn_simple <- c()\nfor (i in d)\n{\n  awgn_simple <- c(awgn_simple,mw2dbm(Pr_in_mW( Pt=dbm2mw(0), fc=2.405e9, d=i,alpha=n, h=1,Pn=0)))\n}\n\nawgn_h <- c()\nfor (i in d)\n{\n  awgn_h <- c(awgn_h,mw2dbm(Pr_in_mW( Pt=dbm2mw(0), fc=2.405e9, d=i,alpha=n, h=rayleigh_rnd(mean_rayleigh, sd_rayleigh),Pn=0)))\n}\n\nawgn_hPn <- c()\nfor (i in d)\n{\n  #awgn_hPn <- c(awgn_hPn,mw2dbm(Pr_in_mW( Pt=dbm2mw(0), fc=2.405e9, d=i,alpha=n, h=rayleigh_rnd(mean_rayleigh, sd_rayleigh),Pn=rnorm(1, mean=0, sd=sd_noise_mW))))\n  awgn_hPn <- c(awgn_hPn,(rnorm(1, mean=0, sd=sd_noise_mW))^2)\n}\n\npr <-data.frame(distance=d,\n                rss_pl_11=sapply(d, rss_path_loss, fc=2.405e9, n=2),\n                rss_pl_26=sapply(d, rss_path_loss, fc=2.480e9, n=2),\n                rss_pl_ln_11=sapply(d, rss_log_normal, fc=2.405e9, n=2, sigma=3),\n                rss_pl_ln_26=sapply(d, rss_log_normal, fc=2.480e9, n=2, sigma=3)\n                )\n\npr$awgn_simple  <- awgn_simple\npr$awgn_h <- awgn_h\npr$awgn_hPn <- mw2dbm(dbm2mw(awgn_h) + awgn_hPn)\n\nmeltedPr <- melt.data.frame(pr,id=\"distance\",measure=c(\"awgn_simple\",\"awgn_hPn\"))\n\np <- ggplot(meltedPr, aes(x=distance, y=value, color=variable))\np <- p + geom_line() + geom_point()\np <- p + scale_color_manual(name=\"Type of attenuation\",\n                             breaks=c(\"awgn_simple\",  \"awgn_hPn\"),\n                             labels=c(\"Ideal pathloss\", \"Simulated pathloss\"),\n                             values=c(\"black\",\"blue\"))\n\np <- p + labs(x=\"Distance [m]\", y=\"RSS [dBm]\") + theme(axis.title=element_text(size=20), text=element_text(size=18)) #+ theme(legend.position=\"none\")\n\np <- p+ggtitle(paste(\"sd_rayleigh=\", sd_rayleigh, \" sd_noise_mW=\", sd_noise_dbm, sep=\" \"))\n\nprint(p)\n#ggsave(\"SimulationVsIdeal.pdf\")\n# p <- p + geom_line(aes(y=rss_pl_11, linetype=\"pl_11\", shape=\"pl_11\"), size=0.5)\n# p <- p + geom_line(aes(y=rss_pl_26, linetype=\"pl_26\", shape=\"pl_26\"), size=0.5)\n# \n# p <- p + geom_point(aes(y=rss_pl_ln_11, shape=\"pl_ln_11\", linetype=\"pl_ln_11\"), size=1.5)\n# p <- p + geom_line(aes(y=rss_pl_ln_11,  shape=\"pl_ln_11\", linetype=\"pl_ln_11\"), size=0.25)\n                 \np <- p + geom_point(aes(y=awgn_simple, shape=\"awgnsimp3\", linetype=\"awgnsimp3\"), size=1.5)\np <- p + geom_line(aes(y=awgn_simple,  shape=\"awgnsimp\", linetype=\"awgnsimp\"), size=0.25)\n\np <- p + geom_point(aes(y=awgn_h, shape=\"awgnh\", linetype=\"awgnh\"), size=1.5, color=\"red\")\np <- p + geom_line(aes(y=awgn_h,  shape=\"awgnh\", linetype=\"awgnh\"), size=0.25, color=\"red\")\n\np <- p + geom_point(aes(y=awgn_hPn, shape=\"awgnPn\", linetype=\"awgnPn\"), size=1.5, color=\"blue\")\np <- p + geom_line(aes(y=awgn_hPn,  shape=\"awgnPn\", linetype=\"awgnhPn\"), size=0.25, color=\"blue\")\n\n\n# p <- p + scale_x_continuous(limits=c(1,50))\n# p <- p + scale_y_continuous(limits=c(-100,-30))\n\n\n\n#p <- p + scale_linetype_manual(labels=c(\"fc=2.405 GHz\", \"fc=2.480 GHz\", \"sd=3 dB\", \"ccc\"), values=c(1,2,3,4), breaks=c(\"pl_11\", \"pl_26\", NA, NA), drop=FALSE, guide=guide_legend(title=\"log-distance (n=3, d0=1 m)\", title.position=\"top\", title.hjust=0, title.theme=element_text(size=8, angle=0), direction=\"vertical\", keywidth=1, default.unit=\"cm\",order=1))\n\np <- p + scale_shape_manual(labels=c(\"sd=3 dB\"), values=c(0,0,1), breaks=c(\"pl_ln_11\"), drop=FALSE, guide=guide_legend(title=\"shadowing\", title.position=\"top\", title.hjust=0, title.theme=element_text(size=8, angle=0), direction=\"vertical\", keywidth=1, default.unit=\"cm\", order=2))\n\np <- p + labs(x=\"Distance [m]\", y=\"RSS [dBm]\") #+ theme(legend.position=\"none\")\n\nprint(p)\n\n#ggsave(p, file=\"Rayleigh_model_2_freq.pdf\", width=12, height=8, scale=1.25, units=\"cm\")\n\nd <- seq(1,10,by=0.1)\nRSSvsDistance <- function (d = seq(1,10,by=0.1), mean_rayleigh=0, sd_rayleigh=15, sd_noise_dbm = -45, pathloss_alpha = 3, constant_channel_gain = 23, saveToFile = FALSE) {\n    \n    sd_noise_mW <- dbm2mw (sd_noise_dbm)\n    awgn_hPn <- c()\n    awgn_simple <- c()\n    for (i in d)\n    {\n      awgn_simple <- c(awgn_simple,mw2dbm(Pr_in_mW( Pt=dbm2mw(0), fc=2.405e9, d=i,alpha=pathloss_alpha, h=1,Pn=0))) \n    }\n    \n    awgn_simple <- awgn_simple + constant_channel_gain # add default channel gain for the ideal curve.. \n    \n    for (i in d){\n      Pn <- rnorm(1, mean=0, sd=sd_noise_mW) \n      h <- rayleigh_rnd(mean_rayleigh, sd_rayleigh)\n      \n      P <- Pr_in_mW(Pt_mW, ch2fc(ch), i, pathloss_alpha, h, Pn)\n      rssi <- round(mw2dbm(P)) #- 5\n      \n      awgn_hPn <- c(awgn_hPn,rssi)\n    }\n    pr <-data.frame(distance=d, awgn_simple=awgn_simple, awgn_hPn=awgn_hPn)\n    \n    meltedPr <- melt.data.frame(pr,id=\"distance\",measure=c(\"awgn_simple\",\"awgn_hPn\"))\n    \n    p <- ggplot(meltedPr, aes(x=distance, y=value, color=variable))\n    p <- p + geom_line() + geom_point()\n    p <- p + scale_color_manual(name=\"Type of attenuation\",\n                                breaks=c(\"awgn_simple\",  \"awgn_hPn\"),\n                                labels=c(\"Ideal pathloss\", \"Simulated pathloss\"),\n                                values=c(\"black\",\"blue\"))\n    \n    p <- p + labs(x=\"Distance [m]\", y=\"RSS [dBm]\") + theme(axis.title=element_text(size=20), text=element_text(size=18)) #+ theme(legend.position=\"none\")\n    \n    p <- p+ggtitle(paste(\"sd_rayleigh=\", sd_rayleigh, \" sd_noise_mW=\", sd_noise_dbm, \"dbm\", sep=\" \"))\n    \n    print(p)\n    \n    if(saveToFile)\n      ggsave(paste(\"SimulationVsIdeal_sdRayleigh\",sd_rayleigh,\"_sdNoise\",sd_noise_dbm,\".pdf\",sep=\"\"))\n    \n  }\n#RSSvsDistance (0,15,-30,3)\n#RSSvsDistance (0,10,-45,3)\n#RSSvsDistance (1/sqrt(2),0,-4599999999,3)\nd <- seq(1,5,by=0.1)\nRSSvsDistance (d, 0, 15,-45, 3, constant_channel_gain=23)\nRSSvsDistance (d,mean_rayleigh= 1/sqrt(2), sd_rayleigh=0, sd_noise_dbm = -4599999999,pathloss_alpha=3, constant_channel_gain=0)\n",
    "created" : 1406279118103.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "259182142",
    "id" : "2C927C1F",
    "lastKnownWriteTime" : 1427203008,
    "last_content_update" : 0,
    "path" : "~/phd/R/AllScripts/propagation-rayleigh.R",
    "project_path" : "propagation-rayleigh.R",
    "properties" : {
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}