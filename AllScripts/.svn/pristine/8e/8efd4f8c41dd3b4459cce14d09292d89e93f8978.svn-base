library(plyr)
source("configuration.R")


rss_path_loss <- function(d, pt=0, fc=2.405e9, n=2, d0=1) {
  lamda <- 2.998e8/fc;
  pl <- -20*log10(lamda/(4*pi*d0)) + 10*n*log10(d/d0);
  pt-pl
}

d_from_rss <- function(rss, pt=0, fc=2.405e9, n=3, d0=1) {
  lamda <- 2.998e8/fc;
  pl = pt-rss
  d <- d0 * 10^((pl + 20*log10(lamda/(4*pi*d0))) / (10*n));
  return(d)
}

closestNode <- function(senderNode, currentSeq, lookinSet, constraint="rssi") {
  lookinSet <- subset (lookinSet, sender==senderNode & !(receiver %in% currentSeq)) # lookinSet except currentSeq
  orderedSet <- lookinSet[order(lookinSet[,constraint]),] # ordered by constraint, ascending
  return(as.numeric(as.character(orderedSet[1,"receiver"])))
}

greedySortNodes <- function (refNode, Set, constraint = "d_from_mean") {
  resultSeq <- c(refNode)
  while (length(resultSeq) != length(unique(Set$sender))) {
    nextNode <- closestNode (resultSeq[length(resultSeq)],resultSeq, Set, constraint)
    resultSeq <- c(resultSeq,nextNode)
  }
  return(resultSeq)
}

allSequences_fromCh26 = matrix(data = NA, nrow = 1, ncol = length(Truth), byrow = TRUE, dimnames = NULL)
allSequences_fromMean = matrix(data = NA, nrow = 1, ncol = length(Truth), byrow = TRUE, dimnames = NULL)
successMean <- 0
successCh26 <- 0

startTime <- proc.time()

allstats <- read.csv ("distance_vector_stats_all_channels_4thFl.csv.txt", header=TRUE);

for(expNo in experimentSet)
{
  cat("expNo:",expNo,"\n") 
  
  stats <- subset (allstats, run==expNo)
  
  theSequenceCh26 <- greedySortNodes(refnode, stats, constraint="d_from_ch26");
  allSequences_fromCh26 <- rbind(allSequences_fromCh26,theSequenceCh26)
  
  verdictCh26 <- all(theSequenceCh26 == Truth)
  if (verdictCh26 == TRUE){
    successCh26 <- successCh26 + 1
  }
  
  theSequenceMean <- greedySortNodes(refnode, stats, constraint="d_from_mean");
  allSequences_fromMean <- rbind(allSequences_fromMean,theSequenceMean)
  
  verdictMean <- all(theSequenceMean == Truth)
  if (verdictMean == TRUE){
    successMean <- successMean + 1
  }
  
  cat("successCh26:",successCh26,"\t"); cat("successMean:",successMean,"\n")
}

## Print Elapsed Time
endTime <- proc.time()
print(endTime-startTime)

allSequences_fromCh26 <- allSequences_fromCh26[2:nrow(allSequences_fromCh26),]
allSequences_fromMean <- allSequences_fromMean[2:nrow(allSequences_fromMean),]



if (FALSE) {
            TRACE_FILE <- paste(directory,inFilePrefix,expNo,inFileSuffix, sep="")
            
            cat("Loading:",TRACE_FILE,"\n")  
            packets <- read.table(TRACE_FILE, sep="\t", na.strings="", col.names=c("receiver", "sender", "channel", "rssi", "power", "time", "packetnum"), 
                                  colClasses=c(rep("factor",3), "numeric", "factor", "character", "numeric"), header=FALSE)
            
            stats <- ddply (packets,.(sender,receiver), summarise, 
                            mean_rssi = mean(rssi), 
                            mean_ch26_rssi = mean(subset(rssi,channel==26)),
                            d_from_mean = d_from_rss(mean_rssi),
                            d_from_ch26 = d_from_rss(mean_ch26_rssi)
                            )
}