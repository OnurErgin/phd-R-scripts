#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect, order=-as.numeric(isCorrect)))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=TRUE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect, order=as.numeric(isCorrect)))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=TRUE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
ggplot()
ggplot().version
help(ggplot)
factor(finalVerdicts$isCorrect)
finalVerdicts$isCorrect <- factor(finalVerdicts$isCorrect, levels=c("TRUE","FALSE"))
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect, order=as.numeric(isCorrect)))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=TRUE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect, order=as.numeric(isCorrect)))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=FALSE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=FALSE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
finalVerdicts$isCorrect <- factor(finalVerdicts$isCorrect, levels=c("TRUE","FALSE"))
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=FALSE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
levels(finalVerdicts$isCorrect)
levels(finalVerdicts$isCorrect) <- c(TRUE, FALSE)
levels(finalVerdicts$isCorrect)
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
finalVerdicts$isCorrect <- factor(finalVerdicts$isCorrect, levels=c("TRUE","FALSE")) # for ordering in the new version of ggplot2
if ("bar" %in% pType)
{
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=FALSE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
#setOfPlots <- list(setOfPlots,p1)
}
scale_fill_manual2 <- function(){
#return (scale_fill_manual("Verdict",values=c("#f03b20","#1f78b4")))
#temporarily ignore below
if(length(unique(finalVerdicts$isCorrect))==2)
scale_fill_brewer("Verdict",palette="Paired", direction=-1) # Blue and light blue
#scale_fill_manual("Verdict",values=c("#f03b20","#1f78b4")) #Blue and Red
else
scale_fill_manual("Verdict",values=c("#1f78b4"))
}
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=FALSE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
titleTxt <- paste(sep=" ", "Total Success =", verifiedSuccess, "/",length(experiments),"(",round(verifiedSuccess/length(experiments),digits=4)*100,"%)\n",
"HighReliable Success =",highReliableSuccess,"/",highReliableTotal,"(",highReliableSuccessRatio,"%)\n")
if ("bar" %in% pType)
{
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=FALSE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
#setOfPlots <- list(setOfPlots,p1)
}
theme_update(axis.title.x = element_text(size = 20, vjust = -0.25),
axis.title.y = element_text(size = 20, angle = 90, vjust = 0.25),
axis.text.x = element_text(size = 16, color = "black"),
axis.text.y = element_text(size = 16, color = "black"),
title = element_text(size=10),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey90"),
legend.position = "bottom",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_rect(fill="white", size=0.25),
legend.text = element_text(size=16),
legend.title = element_text(size=16))
finalVerdicts$isCorrect <- factor(finalVerdicts$isCorrect, levels=c("TRUE","FALSE")) # for ordering in the new version of ggplot2
titleTxt <- paste(sep=" ", "Total Success =", verifiedSuccess, "/",length(experiments),"(",round(verifiedSuccess/length(experiments),digits=4)*100,"%)\n",
"HighReliable Success =",highReliableSuccess,"/",highReliableTotal,"(",highReliableSuccessRatio,"%)\n")
if ("bar" %in% pType)
{
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=FALSE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
#setOfPlots <- list(setOfPlots,p1)
}
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey90"),
legend.position = "bottom",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_rect(fill="white", size=0.25),
legend.text = element_text(size=16),
legend.title = element_text(size=16))
finalVerdicts$isCorrect <- factor(finalVerdicts$isCorrect, levels=c("TRUE","FALSE")) # for ordering in the new version of ggplot2
titleTxt <- paste(sep=" ", "Total Success =", verifiedSuccess, "/",length(experiments),"(",round(verifiedSuccess/length(experiments),digits=4)*100,"%)\n",
"HighReliable Success =",highReliableSuccess,"/",highReliableTotal,"(",highReliableSuccessRatio,"%)\n")
if ("bar" %in% pType)
{
p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect))
#p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous("Verdict Ratio [%]",labels=percent) # ylab("Number Of Experiments") #+ labels(percent_format())
p1 <- p1 + geom_bar() + scale_y_continuous("Number Of Experiments", limits=c(0,length(unique(analyse$expNo))))
p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=FALSE))
p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), legend.position="bottom")
p1 <- p1 + scale_x_discrete(drop=FALSE)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom="text", position="identity") # add text above bars
print(p1)
#setOfPlots <- list(setOfPlots,p1)
}
if ("timeLapse" %in% pType && FALSE) {
if(nrow(plainFail) >0)
plainFail$reliability <- "plainFail"
#plainResults$reliability <- "plainResults"
finalVerdicts <- rbind(finalVerdicts,plainFail)
finalVerdicts$reliability <- factor(finalVerdicts$reliability, levels=c("plainFail","high","medium", "low", "weak", "unreliable","plainResults"))
p2 <- ggplot(finalVerdicts, aes(x=expNo, y=reliability, fill=isCorrect))
p2 <- p2 + geom_tile(width=1)
# Add plainFails:
#p2 <- p2 + geom_tile(data=plainFail, aes(x=expNo, y="plainFail", fill=isCorrect))
#p2 <- scale_y_discrete(limits=c("a","b","c","d"))
p2 <- p2 + scale_fill_manual2()  + guides(fill=guide_legend(reverse=TRUE))
p2 <- p2 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill="#FAFAFA"), plot.title=element_text(size=10))
p2 <- p2 + scale_y_discrete(drop=FALSE)
#  print(p2)
#p1 <- p1+facet_wrap(~Rank+verifyRank)
#setOfPlots <- list(setOfPlots,p2)
}
plotName <- paste("./plots/3-levels-highExclusive-Thrs",mediumThreshold,"max-",if (expID<10) "0",expID,"-",expName,".pdf",sep="")
plotName <- removeSpaces(plotName)
if (produceOutput) {
cat("Saving", plotName,"\n")
ggsave(plotName,p1)
}
print(paste(expName,
"Success = ",success, "/",length(experiments),"(",round(success/length(experiments),digits=4)*100,"%)", " | Total verified Success =", verifiedSuccess, "/",length(experiments),"(",round(verifiedSuccess/length(experiments),digits=4)*100,"%) |",
"HighReliable Success =",highReliableSuccess,"/",highReliableTotal,"(",highReliableSuccessRatio,"%)\n"))
source('~/phd/R/2d/countVerify2D.R')
?ggsave
par("din")
par("din")$
;
dev.set()
dev.size()
dev.size()[1]
dev.size()[2]
dev.capabilities()
p1
ggsave("text.pdf",p1,width=10, units="cm")
ggsave("plots/text.pdf",p1,scale=0.5)
ggsave("plots/test.pdf",p1,scale=1)
ggsave("plots/test.pdf",p1,scale=0.8)
ggsave("plots/text.pdf",p1,scale=1)
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
expType <- c("2DvsMDS -45dbm"=1, "2DvsMDS -30dbm"=2)
expSize <- const2d5x4 <- const2d10x2 <- mds.5x4 <- mds.10x2 <- c()
type <- 1   # Simulation Pn= -45dbm h=15
expSize[type]     <- 1000
const2d5x4[type]  <- 816
mds.5x4[type]     <- 909
const2d10x2[type] <- 873
mds.10x2[type]    <- 243 # -45 dbm
type <- 2   # Simulation Pn= -30dbm h=15
expSize[type]     <- 1000
const2d5x4[type]  <-  779
mds.5x4[type]     <-  991
const2d10x2[type] <-  885
mds.10x2[type]    <- 0
plotSuccess <- function (eType, saveToFile=FALSE)
{
library(ggplot2)
library(RColorBrewer)
library(reshape)
plotName <- names(expType[eType])
dataNames <- c("2d","MDS"); dimensionNames <- c("5x4", "10x2")
results <- matrix(data = c(
const2d5x4[eType],const2d10x2[eType],    # PNSD - Probabilistic Node Sequence Discovery
mds.5x4[eType],mds.10x2[eType]
),
ncol = 2, byrow = TRUE,
dimnames = list(dataNames,     # Rownames
dimensionNames)                  # Colnames
)
# Convert to percents:
results <- round((results/expSize[eType]) * 100,2)
results <- melt(results)
colnames(results)=c("algorithm","dimension", "success")
#reorder bars
results <- within(results, algorithm <- factor(algorithm, levels = dataNames))
results <- within(results, dimension <- factor(dimension, levels = dimensionNames))
theme_update(axis.title.x = element_text(size = 20, vjust = -0.25),
axis.title.y = element_text(size = 20, angle = 90, vjust = 0.25),
axis.text.x = element_text(size = 16, color="black"),
axis.text.y = element_text(size = 16, color="black"),
title = element_text(size=20),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey90"),
legend.position = "bottom",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_rect(fill="white", size=0.25),
legend.text = element_text(size=14))
p <- ggplot (results, aes(x=dimension, y=success, fill=algorithm)) + geom_bar(stat="identity", position="dodge")
p<- p + geom_bar(stat="identity", position="dodge", colour="white", show_guide=FALSE) # to hide legend slashes
p <- p + labs(x="Grid Dimensions") + scale_y_continuous("Success [%]", limits=c(0,100))
p <- p + scale_fill_manual(name="Algorithm", values = rev(brewer.pal(6,"YlGnBu")), guide=guide_legend(nrow=2,))
p <- p + geom_text(data=results, aes(y=(success),label=paste(success,"%",sep="")),position=position_dodge(width=0.9), size=3, vjust=0)
#p <- p + geom_text(data=results, aes(y=(50), label=algorithm),position=position_dodge(width=0.9), size=3.5, vjust=0, angle=90)
p <- p + ggtitle(plotName)
print(p)
if (saveToFile)
{
cat(plotName, "saving...\n")
# ggsave(filename=paste("./plots/",plotName,".pdf",sep=""), plot=p, width=6.86, height=5)
}
}
plotSuccess(1, saveToFile=TRUE)
expType <- c("Moderate Noise"=1, "High Noise"=2)
expSize <- const2d5x4 <- const2d10x2 <- mds.5x4 <- mds.10x2 <- c()
type <- 1   # Simulation Pn= -45dbm h=15
expSize[type]     <- 1000
const2d5x4[type]  <- 816
mds.5x4[type]     <- 909
const2d10x2[type] <- 873
mds.10x2[type]    <- 243 # -45 dbm
type <- 2   # Simulation Pn= -30dbm h=15
expSize[type]     <- 1000
const2d5x4[type]  <-  779
mds.5x4[type]     <-  991
const2d10x2[type] <-  885
mds.10x2[type]    <- 0
plotSuccess <- function (eType, saveToFile=FALSE)
{
library(ggplot2)
library(RColorBrewer)
library(reshape)
plotName <- names(expType[eType])
dataNames <- c("2d","MDS"); dimensionNames <- c("5x4", "10x2")
results <- matrix(data = c(
const2d5x4[eType],const2d10x2[eType],    # PNSD - Probabilistic Node Sequence Discovery
mds.5x4[eType],mds.10x2[eType]
),
ncol = 2, byrow = TRUE,
dimnames = list(dataNames,     # Rownames
dimensionNames)                  # Colnames
)
# Convert to percents:
results <- round((results/expSize[eType]) * 100,2)
results <- melt(results)
colnames(results)=c("algorithm","dimension", "success")
#reorder bars
results <- within(results, algorithm <- factor(algorithm, levels = dataNames))
results <- within(results, dimension <- factor(dimension, levels = dimensionNames))
theme_update(axis.title.x = element_text(size = 20, vjust = -0.25),
axis.title.y = element_text(size = 20, angle = 90, vjust = 0.25),
axis.text.x = element_text(size = 16, color="black"),
axis.text.y = element_text(size = 16, color="black"),
title = element_text(size=20),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey90"),
legend.position = "bottom",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_rect(fill="white", size=0.25),
legend.text = element_text(size=14))
p <- ggplot (results, aes(x=dimension, y=success, fill=algorithm)) + geom_bar(stat="identity", position="dodge")
p<- p + geom_bar(stat="identity", position="dodge", colour="white", show_guide=FALSE) # to hide legend slashes
p <- p + labs(x="Grid Dimensions") + scale_y_continuous("Success [%]", limits=c(0,100))
p <- p + scale_fill_manual(name="Algorithm", values = rev(brewer.pal(6,"YlGnBu")), guide=guide_legend(nrow=2,))
p <- p + geom_text(data=results, aes(y=(success),label=paste(success,"%",sep="")),position=position_dodge(width=0.9), size=12, vjust=0)
#p <- p + geom_text(data=results, aes(y=(50), label=algorithm),position=position_dodge(width=0.9), size=3.5, vjust=0, angle=90)
p <- p + ggtitle(plotName)
print(p)
if (saveToFile)
{
cat(plotName, "saving...\n")
ggsave(filename=paste("./plots/",plotName,"-2.pdf",sep=""), plot=p, width=3, height=5)
}
}
plotSuccess(1, saveToFile=TRUE)
plotSuccess <- function (eType, saveToFile=FALSE)
{
library(ggplot2)
library(RColorBrewer)
library(reshape)
plotName <- names(expType[eType])
dataNames <- c("2d","MDS"); dimensionNames <- c("5x4", "10x2")
results <- matrix(data = c(
const2d5x4[eType],const2d10x2[eType],    # PNSD - Probabilistic Node Sequence Discovery
mds.5x4[eType],mds.10x2[eType]
),
ncol = 2, byrow = TRUE,
dimnames = list(dataNames,     # Rownames
dimensionNames)                  # Colnames
)
# Convert to percents:
results <- round((results/expSize[eType]) * 100,2)
results <- melt(results)
colnames(results)=c("algorithm","dimension", "success")
#reorder bars
results <- within(results, algorithm <- factor(algorithm, levels = dataNames))
results <- within(results, dimension <- factor(dimension, levels = dimensionNames))
theme_update(axis.title.x = element_text(size = 20, vjust = -0.25),
axis.title.y = element_text(size = 20, angle = 90, vjust = 0.25),
axis.text.x = element_text(size = 16, color="black"),
axis.text.y = element_text(size = 16, color="black"),
title = element_text(size=16),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey90"),
legend.position = "bottom",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_rect(fill="white", size=0.25),
legend.text = element_text(size=14))
p <- ggplot (results, aes(x=dimension, y=success, fill=algorithm)) + geom_bar(stat="identity", position="dodge")
p<- p + geom_bar(stat="identity", position="dodge", colour="white", show_guide=FALSE) # to hide legend slashes
p <- p + labs(x="Grid Dimensions") + scale_y_continuous("Success [%]", limits=c(0,100))
p <- p + scale_fill_manual(name="Algorithm", values = rev(brewer.pal(6,"YlGnBu")), guide=guide_legend(nrow=2,))
p <- p + geom_text(data=results, aes(y=(success),label=paste(success,"%",sep="")),position=position_dodge(width=0.9), size=6, vjust=0)
#p <- p + geom_text(data=results, aes(y=(50), label=algorithm),position=position_dodge(width=0.9), size=3.5, vjust=0, angle=90)
p <- p + ggtitle(plotName)
print(p)
if (saveToFile)
{
cat(plotName, "saving...\n")
ggsave(filename=paste("./plots/",plotName,"-2.pdf",sep=""), plot=p, width=3, height=5)
}
}
plotSuccess(1, saveToFile=TRUE)
plotSuccess <- function (eType, saveToFile=FALSE)
{
library(ggplot2)
library(RColorBrewer)
library(reshape)
plotName <- names(expType[eType])
dataNames <- c("Constrained 2-D","MDS-MAP"); dimensionNames <- c("5x4", "10x2")
results <- matrix(data = c(
const2d5x4[eType],const2d10x2[eType],    # PNSD - Probabilistic Node Sequence Discovery
mds.5x4[eType],mds.10x2[eType]
),
ncol = 2, byrow = TRUE,
dimnames = list(dataNames,     # Rownames
dimensionNames)                  # Colnames
)
# Convert to percents:
results <- round((results/expSize[eType]) * 100,2)
results <- melt(results)
colnames(results)=c("algorithm","dimension", "success")
#reorder bars
results <- within(results, algorithm <- factor(algorithm, levels = dataNames))
results <- within(results, dimension <- factor(dimension, levels = dimensionNames))
theme_update(axis.title.x = element_text(size = 20, vjust = -0.25),
axis.title.y = element_text(size = 20, angle = 90, vjust = 0.25),
axis.text.x = element_text(size = 16, color="black"),
axis.text.y = element_text(size = 16, color="black"),
title = element_text(size=16),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey90"),
legend.position = "bottom",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_rect(fill="white", size=0.25),
legend.text = element_text(size=14))
p <- ggplot (results, aes(x=dimension, y=success, fill=algorithm)) + geom_bar(stat="identity", position="dodge")
p<- p + geom_bar(stat="identity", position="dodge", colour="white", show_guide=FALSE) # to hide legend slashes
p <- p + labs(x="Grid Dimensions") + scale_y_continuous("Success [%]", limits=c(0,100))
p <- p + scale_fill_manual(name="Algorithm", values = rev(brewer.pal(6,"YlGnBu")), guide=guide_legend(nrow=2,))
p <- p + geom_text(data=results, aes(y=(success),label=paste(success,"%",sep="")),position=position_dodge(width=0.9), size=6, vjust=0)
#p <- p + geom_text(data=results, aes(y=(50), label=algorithm),position=position_dodge(width=0.9), size=3.5, vjust=0, angle=90)
p <- p + ggtitle(plotName)
print(p)
if (saveToFile)
{
cat(plotName, "saving...\n")
ggsave(filename=paste("./plots/",plotName,"-2.pdf",sep=""), plot=p, width=3, height=5)
}
}
plotSuccess(1, saveToFile=TRUE)
plotSuccess <- function (eType, saveToFile=FALSE)
{
library(ggplot2)
library(RColorBrewer)
library(reshape)
plotName <- names(expType[eType])
dataNames <- c("Constrained 2-D","MDS-MAP"); dimensionNames <- c("5x4", "10x2")
results <- matrix(data = c(
const2d5x4[eType],const2d10x2[eType],    # PNSD - Probabilistic Node Sequence Discovery
mds.5x4[eType],mds.10x2[eType]
),
ncol = 2, byrow = TRUE,
dimnames = list(dataNames,     # Rownames
dimensionNames)                  # Colnames
)
# Convert to percents:
results <- round((results/expSize[eType]) * 100,2)
results <- melt(results)
colnames(results)=c("algorithm","dimension", "success")
#reorder bars
results <- within(results, algorithm <- factor(algorithm, levels = dataNames))
results <- within(results, dimension <- factor(dimension, levels = dimensionNames))
theme_update(axis.title.x = element_text(size = 14, vjust = -0.25),
axis.title.y = element_text(size = 14, angle = 90, vjust = 0.25),
axis.text.x = element_text(size = 12, color="black"),
axis.text.y = element_text(size = 12, color="black"),
title = element_text(size=12),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey90"),
legend.position = "bottom",
legend.box = "horizontal",
legend.key = element_blank(),
legend.background = element_rect(fill="white", size=0.25),
legend.text = element_text(size=12))
p <- ggplot (results, aes(x=dimension, y=success, fill=algorithm)) + geom_bar(stat="identity", position="dodge")
p<- p + geom_bar(stat="identity", position="dodge", colour="white", show_guide=FALSE) # to hide legend slashes
p <- p + labs(x="Grid Dimensions") + scale_y_continuous("Success [%]", limits=c(0,100))
p <- p + scale_fill_manual(name="Algorithm", values = rev(brewer.pal(6,"YlGnBu")), guide=guide_legend(nrow=2,))
p <- p + geom_text(data=results, aes(y=(success),label=paste(success,"%",sep="")),position=position_dodge(width=0.9), size=3, vjust=0)
#p <- p + geom_text(data=results, aes(y=(50), label=algorithm),position=position_dodge(width=0.9), size=3.5, vjust=0, angle=90)
p <- p + ggtitle(plotName)
print(p)
if (saveToFile)
{
cat(plotName, "saving...\n")
ggsave(filename=paste("./plots/",plotName,"-2.pdf",sep=""), plot=p, width=3, height=5)
}
}
plotSuccess(1, saveToFile=TRUE)
plotSuccess(2, saveToFile=TRUE)
source('~/phd/R/2d/countVerify2D.R')
plotName
source('~/phd/R/2d/countVerify2D.R')
ggsave(plotName,p1, height=5, width = 3)
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/countVerify2D.R')
source('~/phd/R/2d/plots.R')
