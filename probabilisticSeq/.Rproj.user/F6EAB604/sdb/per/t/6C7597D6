{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(gridExtra)\nrequire(scales)\n#library(\"RColorBrewer\")\n\nremoveSpaces <- function(...) {a<-gsub(\" \",\"-\", ... , fixed=TRUE); gsub(\",\",\"-\", a , fixed=TRUE)}\n\nsource(\"multiplot.R\")\n\n#expID <- 10\n\nif (expID == 1) \n{\n  files <- Sys.glob(\"verify/verify4thFlSouthWindow2ndRowNormal/*verify*txt\")\n  #expName <- \"4th-Fl-South-Window2ndRow-Reverse\"\n  expName <- \"Set-C, Right-to-Left\"\n  nPackets <- 40\n} else \n  if (expID == 2) \n  {\n    files <- Sys.glob(\"verify/verify4thFlSouthWindow2ndRowReverse/verifyVerdicts-*.txt\")\n    #expName <- \"4th-Fl-South-Window2ndRow-Normal\"\n    expName <- \"Set-C, Left-to-Right\"\n    nPackets <- 40\n  } else \n    if (expID == 3) \n    {\n      files <- Sys.glob(\"verify/verify4thFlNorthSideWindow-interference/4thFloorNorthSide-nointerference-verify1-300.txt\")\n      expName <- \"4th-Fl-North-Window-Normal-NoInterference\"\n      nPackets <- 40\n    } else \n      if (expID == 4) \n      {\n        files <- Sys.glob(\"verify/verify4thFlNorthSideWindow-interference/4thFloorNorthSide-with3interferers-verify1-300.txt\")\n        expName <- \"4th-Fl-North-Window-Normal-With3Interferers\"\n        nPackets <- 40\n      } else \n        if (expID == 5) \n        {\n          files <- Sys.glob(\"verify/verify4thFlNorthSideWindow-interference/4thFloorNorthSide-with1interferers-verify301-600.txt\")\n          expName <- \"4th-Fl-North-Window-Normal-With1Interferer\"\n          nPackets <- 40\n        } else \n          if (expID == 6) \n          {\n            files <- Sys.glob(\"verify/4thFlSouth1stRowFailedOnes-verify.txt\")\n            expName <- \"4th-Fl-South-Window1stRowFailedOnly-Reverse\"\n            nPackets <- 40\n          } else \n            if (expID == 7) \n            {\n              files <- Sys.glob(\"verify/4thFloorNorthSide-nointerference-Reverse-verify1-300.txt\")\n              expName <- \"4th-Fl-North-Window1stRow-Reverse-noInterferer\"\n              nPackets <- 40\n            } else \n              if (expID == 8) \n              {\n                files <- Sys.glob(\"verify/4thFloorNorthSide-1interferer-Reverse-verify301-600.txt\")\n                expName <- \"4th-Fl-North-Window1stRow-Reverse-with1interferer\"\n                nPackets <- 40\n              } else \n                if (expID == 9) \n                {\n                  files <- Sys.glob(\"verify/4thFloorNorthSide-3interferers-Reverse-verify1-300.txt\")\n                  expName <- \"4th-Fl-North-Window1stRow-Reverse-with3interferers\"\n                  nPackets <- 40\n                } else \n                  if (expID == 10) \n                  {\n                    files <- Sys.glob(\"verify/verify4thFlSouth1stRowAisleNormal/*verify*.txt\")\n                    expName <- \"Set-A, Left-to-Right\"\n                    nPackets <- 40\n                  } else \n                    if (expID == 11) \n                    {\n                      files <- Sys.glob(\"verify/verify4thFlSouth1stRowAisleReverse/*verify*.txt\")\n                      #expName <- \"4th-Fl-South-Window1stRow-Reverse\"\n                      expName <- \"Set-A, Right-to-Left\"\n                      nPackets <- 40\n                    } else \n                      if (expID == 12) \n                      {\n                        files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/4thFloorNorth-interference2/4thFloorNorthSideWindow-3interferer-Normal/4thFloorNorthWindow-3interferers-Normal-verify1-300.txt\")\n                        expName <- \"4th-Fl-North-Window1stRow-Normal-3interferer-2\"\n                        nPackets <- 40\n                      } else \n                        if (expID == 13) \n                        {\n                          files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/4thFloorNorth-interference2/4thFloorNorthSideWindow-1interferer-Normal/4thFloorNorthSide-1interferer-Normal-verify301-600.txt\")\n                          expName <- \"4th-Fl-North-Window1stRow-Normal-1interferer-2\"\n                          nPackets <- 40\n                        }else \n                          if (expID == 14) \n                          {\n                            files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/4thFloorNorth-interference2/4thFloorNorthSideWindow-0interferer-Normal/4thFloorNorthSideWindow-0interferer-Normal-verify601-900.txt\")\n                            expName <- \"4th-Fl-North-Window1stRow-Normal-0interferer-2\"\n                            nPackets <- 40\n                          } else \n                            if (expID == 15) \n                            {\n                              files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/4thFloorNorth-interference2/4thFloorNorthSideWindow-3interferer-Reverse/4thFloorNorthSideWindow-3interferer-Reverse-verify1-300.txt\")\n                              expName <- \"4th-Fl-North-Window1stRow-Reverse-3interferer-2\"\n                              nPackets <- 40\n                            } else \n                              if (expID == 16) \n                              {\n                                files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/4thFloorNorth-interference2/4thFloorNorthSideWindow-1interferer-Reverse/4thFloorNorthSideWindow-1interferer-Reverse-verify301-600.txt\")\n                                expName <- \"4th-Fl-North-Window1stRow-Reverse-1interferer-2\"\n                                nPackets <- 40\n                              }else \n                                if (expID == 17) \n                                {\n                                  files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/4thFloorNorth-interference2/4thFloorNorthSideWindow-0interferer-Reverse/4thFloorNorthSideWindow-0interferer-Reverse-verify601-900.txt\")\n                                  expName <- \"4th-Fl-North-Window1stRow-Reverse-0interferer-2\"\n                                  nPackets <- 40\n                                } else \n                                  if (expID == 18) \n                                  {\n                                    files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Aisle-1Packet-Normal-verify*.txt\")\n                                    expName <- \"4th-Fl-South-Aisle1stRow-Normal-1packet\"\n                                    nPackets <- 1\n                                  } else \n                                    if (expID == 19) \n                                    {\n                                      files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Aisle-1Packet-Reverse-verify*.txt\")\n                                      expName <- \"4th-Fl-South-Aisle1stRow-Reverse-1packet\"\n                                      nPackets <- 1\n                                    } else \n                                      if (expID == 20) \n                                      {\n                                        files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Window-1Packet-Normal-verify*.txt\")\n                                        expName <- \"4th-Fl-South-Window2ndRow-Normal-1packet\"\n                                        nPackets <- 1\n                                      } else \n                                        if (expID == 21) \n                                        {\n                                          files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Window-1Packet-Reverse-verify*.txt\")\n                                          expName <- \"4th-Fl-South-Window2ndRow-Reverse-1packet\"\n                                          nPackets <- 1\n                                        } else \n                                          if (expID == 22) \n                                          {\n                                            files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Aisle-8Packet-Normal-verify*.txt\")\n                                            expName <- \"4th-Fl-South-Aisle1stRow-Normal-8packet\"\n                                            nPackets <- 8\n                                          } else \n                                            if (expID == 23) \n                                            {\n                                              files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Aisle-8Packet-Reverse-verify*.txt\")\n                                              expName <- \"4th-Fl-South-Aisle1stRow-Reverse-8packet\"\n                                              nPackets <- 8\n                                            } else \n                                              if (expID == 24) \n                                              {\n                                                files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Window-8Packet-Normal-verify*.txt\")\n                                                expName <- \"4th-Fl-South-Window2ndRow-Normal-8packet\"\n                                                nPackets <- 8\n                                              } else \n                                                if (expID == 25) \n                                                {\n                                                  files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Window-8Packet-Reverse-verify*.txt\")\n                                                  expName <- \"4th-Fl-South-Window2ndRow-Reverse-8packet\"\n                                                  nPackets <- 8\n                                                } else \n                                                  if (expID == 26) \n                                                  {\n                                                    files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Aisle-16Packet-Normal-verify*.txt\")\n                                                    expName <- \"4th-Fl-South-Aisle1stRow-Normal-16packet\"\n                                                    nPackets <- 16\n                                                  } else \n                                                    if (expID == 27) \n                                                    {\n                                                      files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Aisle-16Packet-Reverse-verify*.txt\")\n                                                      expName <- \"4th-Fl-South-Aisle1stRow-Reverse-16packet\"\n                                                      nPackets <- 16\n                                                    } else \n                                                      if (expID == 28) \n                                                      {\n                                                        files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Window-16Packet-Normal-verify*.txt\")\n                                                        expName <- \"4th-Fl-South-Window2ndRow-Normal-16packet\"\n                                                        nPackets <- 16\n                                                      } else \n                                                        if (expID == 29) \n                                                        {\n                                                          files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/nPacket/4thFloorSouthSide-Window-16Packet-Reverse-verify*.txt\")\n                                                          expName <- \"4th-Fl-South-Window2ndRow-Reverse-16packet\"\n                                                          nPackets <- 16\n                                                        } else \n                                                          if (expID == 30) \n                                                          {\n                                                            files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetA-Q50-Normal-verify1-2000.txt\")\n                                                            expName <- \"SetA-Q50-Normal\"\n                                                            nPackets <- \"Q50\"\n                                                          } else \n                                                            if (expID == 31) \n                                                            {\n                                                              files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetA-Q90-verify-Normal-verify1-2000.txt\")\n                                                              expName <- \"SetA-Q90-Normal\"\n                                                              nPackets <- \"Q90\"\n                                                            } else \n                                                              if (expID == 32) \n                                                              {\n                                                                files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetA-Q100-Normal-verify1-2000.txt\")\n                                                                expName <- \"SetA-Q100-Normal\"\n                                                                nPackets <- \"Q100\"\n                                                              } else \n                                                                if (expID == 33) \n                                                                {\n                                                                  files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetA-Q50-Reverse-verify1-2000.txt\")\n                                                                  expName <- \"SetA-Q50-Reverse\"\n                                                                  nPackets <- \"Q50\"\n                                                                } else \n                                                                  if (expID == 34) \n                                                                  {\n                                                                    files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetA-Q90-verify-Reverse-verify1-2000.txt\")\n                                                                    expName <- \"SetA-Q90-Reverse\"\n                                                                    nPackets <- \"Q90\"\n                                                                  } else \n                                                                    if (expID == 35) \n                                                                    {\n                                                                      files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetA-Q100-Reverse-verify1-2000.txt\")\n                                                                      expName <- \"SetA-Q100-Reverse\"\n                                                                      nPackets <- \"Q100\"\n                                                                    } else \n                                                                      if (expID == 36) \n                                                                      {\n                                                                        files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetC-Q50-Normal-verify1-2000.txt\")\n                                                                        expName <- \"SetC-Q50-Normal\"\n                                                                        nPackets <- \"Q50\"\n                                                                      } else \n                                                                        if (expID == 37) \n                                                                        {\n                                                                          files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetC-Q90-verify-Normal-verify1-2000.txt\")\n                                                                          expName <- \"SetC-Q90-Normal\"\n                                                                          nPackets <- \"Q90\"\n                                                                        } else \n                                                                          if (expID == 38) \n                                                                          {\n                                                                            files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetC-Q100-Normal-verify1-2000.txt\")\n                                                                            expName <- \"SetC-Q100-Normal\"\n                                                                            nPackets <- \"Q100\"\n                                                                          } else \n                                                                            if (expID == 39) \n                                                                            {\n                                                                              files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetC-Q50-Reverse-verify1-2000.txt\")\n                                                                              expName <- \"SetC-Q50-Reverse\"\n                                                                              nPackets <- \"Q50\"\n                                                                            } else \n                                                                              if (expID == 40) \n                                                                              {\n                                                                                files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetC-Q90-verify-Reverse-verify1-2000.txt\")\n                                                                                expName <- \"SetC-Q90-Reverse\"\n                                                                                nPackets <- \"Q90\"\n                                                                              } else \n                                                                                if (expID == 41) \n                                                                                {\n                                                                                  files <- Sys.glob(\"/Users/ergin/phd/R/probabilisticSeq/verify/Qx/SetC-Q100-Reverse-verify1-2000.txt\")\n                                                                                  expName <- \"SetC-Q100-Reverse\"\n                                                                                  nPackets <- \"Q100\"\n                                                                                }\n                                                          \n                                                           \n\njoinReports <- function(files) {\n  verifyDF <- data.frame()\n  for (f in files)\n    verifyDF <- rbind(verifyDF, read.table(f, header=TRUE, stringsAsFactors=FALSE))\n  \n  expNoOrder <- with(verifyDF,order(expNo))\n  verifyDF <- verifyDF[expNoOrder,]\n  row.names(verifyDF) <- 1:nrow(verifyDF)\n  return(verifyDF)\n}\n\n#Filename <- \"verify/4thFloorNorthSide-nointerference-verify1-300.txt\"\n#analyse <- read.table (Filename, header=TRUE)\n\nanalyse <- joinReports(files)\n\n#plainResults <- subset(analyse, Rank == 1 & verifyRank == 1, select=-c(5,6,7,8,9,11)) # just single result\nplainResults <- subset(analyse, Rank == 1 & verifyRank == 1) # just single result\nplainSuccess <- subset(plainResults, isCorrect == TRUE)\nplainFail <- subset(plainResults, isCorrect == FALSE)\nmost.common.mistake <- names(table(plainFail$computedSeq)[1])\n\nexperiments <- unique(analyse$expNo)\nsuccess <- 0\nmatch <- 0\ntruePositive <- c() # TRUE TRUE & match\nfalsePositive <- c() # FALSE FALSE & match\n\ntrueNegative <- c() # FALSE TRUE \nfalseNegative <- c() # TRUE FALSE\n\nfor (e in experiments) {\n  tExp <- subset(analyse, expNo == e)\n  \n  if (tExp[1,\"isCorrect\"])\n    success <- success +1\n  \n  if (tExp[1,\"match\"])\n    match <- match +1\n  \n  if(tExp[1,\"isCorrect\"] == TRUE && tExp[1,\"verifyIsCorrect\"] == TRUE )\n    truePositive <- c(truePositive,e)\n  \n  if(tExp[1,\"isCorrect\"] == FALSE && tExp[1,\"match\"] == TRUE)\n    falsePositive <- c(falsePositive,e)\n  \n  if(tExp[1,\"isCorrect\"] == FALSE && tExp[1,\"match\"] == FALSE)\n    trueNegative <- c(trueNegative,e)\n  \n  if(tExp[1,\"isCorrect\"] == TRUE && tExp[1,\"match\"] == FALSE)\n    falseNegative <- c(falseNegative,e)\t\n}\n\n#matches <- subset(analyse, match == TRUE)\n\ncat(\"success: \", success, \"\\n\")\ncat(\"match: \", match, \"\\n\")\n\ncat(\"truePositive: \", length(truePositive), \"\\n\")\ncat(\"falsePositive: \", length(falsePositive), \"\\n\")\ncat(\"trueNegative: \", length(trueNegative), \"\\n\")\ncat(\"falseNegative: \", length(falseNegative), \"\\n\")\n#print(expName); stop()\n#plot(subset(analyse, expNo %in% truePositive & Rank == 1 & verifyRank ==1)$jointProb)\n\n# expNos of Unreliable measurements\nfindUnreliables <- function(analyse) \n{\n    unreliables <- c()\n    #unreliables <- data.frame()\n    for (e in unique(analyse$expNo))\n    {\n      tDF <- subset(analyse, expNo == e) # or tDF <- analyse[analyse$expNo==e,]\n      seqStrings <- c(as.character(tDF$computedSeq),as.character(tDF$verifySeq))\n      \n      thisExpIsUnreliable <- FALSE\n      for(s in seqStrings) {\n        \n        if (grepl(\"NA\",s)) # contains NAs\n        {\n          thisExpIsUnreliable <- TRUE\n          unreliables <- c(unreliables,e)\n          #unreliables <- rbind(unreliables, tDF)\n            break\n        } \n        else\n        { \n          splitted <- as.data.frame(strsplit(s,\",\"))\n          if (TRUE %in% (splitted == 0)) # contains 0s\n          {\n            thisExpIsUnreliable <- TRUE\n            unreliables <- c(unreliables,e)\n            #unreliables <- rbind(unreliables, tDF)\n              break\n          }\n        }        \n      } #for s\n    } #for e\n    return(unreliables)\n}\n\nunreliableExpNos <- findUnreliables(analyse)\nunReliable <- subset(analyse, expNo %in% unreliableExpNos & Rank == 1 & verifyRank == 1)\n\ndata.frame() -> \n                weakResult ->     # no-match\n                lowReliable ->    # n-match, rank=2\n                mediumReliable -> # n-match, rank=1 OR 1-match, rank=2\n                highReliable;     # 1-match, rank=1\n\nfor (e in unique(analyse$expNo)) \n{\n  if(e %in% unreliableExpNos)\n    next\n  expDF <- subset(analyse, expNo == e)\n  \n  matchDegree <- sum(expDF$match)\n  \n  #no-match\n  if(matchDegree == 0)\n  {\n    weakResult <- rbind(weakResult, subset(expDF, Rank == 1 & verifyRank == 1));\n  }\n  else if (matchDegree == 1) # 1-match\n  {\n    finalChoice <- subset(expDF, match == TRUE)\n    \n    if ( finalChoice$Rank == 1)\n    {  \n#       testVerdict <-subset(expDF, Rank==1)[1,\"prob\"]/subset(expDF, Rank==2)[1,\"prob\"]\n#       if (testVerdict < mediumThreshold)\n#         mediumReliable <- rbind(mediumReliable, finalChoice)\n#       else\n        highReliable <- rbind(highReliable, finalChoice)\n    }\n    else \n    {\n      if (finalChoice$Rank == 2)\n        mediumReliable <- rbind(mediumReliable, finalChoice);\n    }\n  } \n  else if (matchDegree > 1) # n-match, make Final Choice by max(verifyIsCorrect)\n  {\n    # Eski, verifyProb'u max olanlari secen. iptal.\n#     matchingRows  <- expDF\n#     rowWithMaxProb <- which(matchingRows==max(matchingRows$verifyProb),arr.ind=TRUE)[,\"row\"] \n   \n    # verdict and verify arasindan probability orani buyuk olandan buyuk probabilitili olani al\n    \n    matchingRows <- subset(expDF,match==TRUE)\n    \n    testOrderProb <- with(matchingRows, order(prob,decreasing=TRUE))\n    testVerdict <- matchingRows[testOrderProb,]$prob[1] / matchingRows[testOrderProb,]$prob[2]\n    \n    testOrderVerifyProb <- with(matchingRows, order(verifyProb,decreasing=TRUE))\n    testVerify <- matchingRows[testOrderVerifyProb,]$verifyProb[1] / matchingRows[testOrderVerifyProb,]$verifyProb[2]\n    \n#     if (testVerdict >= testVerify) {\n#       rowWithMaxProb <- which(matchingRows==max(matchingRows$prob),arr.ind=TRUE)[,\"row\"] \n#     } else {\n#       rowWithMaxProb <- which(matchingRows==max(matchingRows$verifyProb),arr.ind=TRUE)[,\"row\"] \n#     }\n\n      # MAX prob'u sec    \n      if (max(matchingRows$prob) > max(matchingRows$verifyProb)) {\n        rowWithMaxProb <- which(matchingRows==max(matchingRows$prob),arr.ind=TRUE)[,\"row\"] \n      } else \n        rowWithMaxProb <- which(matchingRows==max(matchingRows$verifyProb),arr.ind=TRUE)[,\"row\"] \n      \n      \n\n    finalChoice <- matchingRows[rowWithMaxProb,]\n    mediumThreshold <- 1.1\n    if (testVerdict < mediumThreshold || testVerify < mediumThreshold){\n      lowReliable <- rbind(lowReliable,finalChoice)\n    } else\n      if (finalChoice$Rank == 1){\n      mediumReliable <- rbind(mediumReliable,finalChoice)\n    } else \n      if (finalChoice$Rank == 2)\n        lowReliable <- rbind(lowReliable,finalChoice)\n  \n  } # if matchdegree >1\n} #for e\n\nverifiedSuccess <- sum(highReliable$isCorrect,mediumReliable$isCorrect, lowReliable$isCorrect, weakResult$isCorrect, unReliable$isCorrect)\n\n# Combine all to summarise\n# if (nrow(highReliable)>0)   highReliable$reliability    <- \"high\"\n# if (nrow(mediumReliable)>0) mediumReliable$reliability  <- \"medium\"\n# if (nrow(lowReliable)>0)    lowReliable$reliability     <- \"low\"\n# if (nrow(weakResult)>0)     weakResult$reliability      <- \"weak\"\n# if (nrow(unReliable)>0)     unReliable$reliability      <- \"unreliable\"\n\n# if (nrow(highReliable)>0)   highReliable$reliability    <- \"high\"\n# if (nrow(mediumReliable)>0) mediumReliable$reliability  <- \"high\"\n# if (nrow(lowReliable)>0)    lowReliable$reliability     <- \"medium\"\n# if (nrow(weakResult)>0)     weakResult$reliability      <- \"medium\"\n# if (nrow(unReliable)>0)     unReliable$reliability      <- \"low\"\n\nif (nrow(highReliable)>0)   highReliable$reliability    <- \"high\"\nif (nrow(mediumReliable)>0) mediumReliable$reliability  <- \"medium\"\nif (nrow(lowReliable)>0)    lowReliable$reliability     <- \"medium\"\nif (nrow(weakResult)>0)     weakResult$reliability      <- \"low\"\nif (nrow(unReliable)>0)     unReliable$reliability      <- \"low\"\n\n# Draw histogram:\nfinalVerdicts <- rbind(highReliable, mediumReliable, lowReliable, weakResult, unReliable)\nfinalVerdicts$reliability <- factor(finalVerdicts$reliability, levels=c(\"high\",\"medium\", \"low\"))\n#finalVerdicts$isCorrect <- factor(finalVerdicts$isCorrect, levels=c(\"TRUE\",\"FALSE\"))\n\nfinalVerdicts$numPackets <- nPackets\n\nscale_fill_manual2 <- function(){ \n                          #return (scale_fill_manual(\"Verdict\",values=c(\"#f03b20\",\"#1f78b4\")))\n                          #temporarily ignore below\n                          if(length(unique(finalVerdicts$isCorrect))==2) \n                            scale_fill_brewer(\"Verdict\",palette=\"Paired\") # Blue and light blue\n                            #scale_fill_manual(\"Verdict\",values=c(\"#f03b20\",\"#1f78b4\")) #Blue and Red \n                          else \n                            scale_fill_manual(\"Verdict\",values=c(\"#1f78b4\"))\n                      }\nhighReliableSuccess <- sum(highReliable$isCorrect) #+ sum(mediumReliable$isCorrect)\nhighReliableTotal <- nrow(highReliable) #+ nrow(mediumReliable)\nhighReliableSuccessRatio <- round(highReliableSuccess / highReliableTotal, digits=4)*100\ntitleTxt <- paste(expName,\n                  #\"\\nSuccess=\",success,\"/\",length(experiments),\"(\",round(success/length(experiments),digit=4)*100,\"%) \",\n                  \"\\n Total Success =\", verifiedSuccess, \"/\",length(experiments),\"(\",round(verifiedSuccess/length(experiments),digits=4)*100,\"%)\\n\",\n                  \"HighReliable Success =\",highReliableSuccess,\"/\",highReliableTotal,\"(\",highReliableSuccessRatio,\"%)\\n\")\n\n\npTypes <- c(\"bar\", \"timeLapse\")\npType <- pTypes[1:2]\n\ntheme_update(axis.title.x = element_text(size = 20, vjust = -0.25),\n             axis.title.y = element_text(size = 20, angle = 90, vjust = 0.25),\n             axis.text.x = element_text(size = 16, color = \"black\"),\n             axis.text.y = element_text(size = 16, color = \"black\"),\n             title = element_text(size=8),\n             panel.background = element_blank(),\n             panel.grid.major = element_line(colour = \"grey90\"),\n             legend.position = \"bottom\",\n             legend.box = \"horizontal\",\n             legend.key = element_blank(), \n             legend.background = element_rect(fill=\"white\", size=0.25),\n             legend.text = element_text(size=16),\n             legend.title = element_text(size=16))\n\n\nif (\"bar\" %in% pType)\n{\n  p1 <- ggplot(finalVerdicts, aes(x=reliability, fill=isCorrect))\n  #p1 <- p1 + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous(\"Verdict Ratio [%]\",labels=percent) # ylab(\"Number Of Experiments\") #+ labels(percent_format())\n  p1 <- p1 + geom_bar() + scale_y_continuous(\"Number Of Experiments\", limits=c(0,2000))\n  p1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=TRUE)) \n  p1 <- p1 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill=\"#FAFAFA\"), legend.position=\"bottom\")\n  p1 <- p1 + scale_x_discrete(drop=FALSE)\n  #p1 <- p1+facet_wrap(~Rank+verifyRank)\n  #p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom=\"text\", position=\"identity\") # add text above bars\n  print(p1)\n  #setOfPlots <- list(setOfPlots,p1)\n} \nif (\"timeLapse\" %in% pType && FALSE) {\n  if(nrow(plainFail) >0)\n    plainFail$reliability <- \"plainFail\"\n  #plainResults$reliability <- \"plainResults\"\n  finalVerdicts <- rbind(finalVerdicts,plainFail)\n  finalVerdicts$reliability <- factor(finalVerdicts$reliability, levels=c(\"plainFail\",\"high\",\"medium\", \"low\", \"weak\", \"unreliable\",\"plainResults\"))\n  \n  p2 <- ggplot(finalVerdicts, aes(x=expNo, y=reliability, fill=isCorrect))\n  p2 <- p2 + geom_tile(width=1)\n  # Add plainFails:\n  #p2 <- p2 + geom_tile(data=plainFail, aes(x=expNo, y=\"plainFail\", fill=isCorrect))\n  #p2 <- scale_y_discrete(limits=c(\"a\",\"b\",\"c\",\"d\"))\n  p2 <- p2 + scale_fill_manual2()  + guides(fill=guide_legend(reverse=TRUE))\n  p2 <- p2 + ggtitle(titleTxt) + theme(panel.background=element_rect(fill=\"#FAFAFA\"), plot.title=element_text(size=10))\n  p2 <- p2 + scale_y_discrete(drop=FALSE)\n#  print(p2)\n  #p1 <- p1+facet_wrap(~Rank+verifyRank)\n  #setOfPlots <- list(setOfPlots,p2)\n}\n\nplotName <- paste(\"verify/plots/3-levels-highExclusive/Thrs\",mediumThreshold,\"max-\",if (expID<10) \"0\",expID,\"-\",expName,\".pdf\",sep=\"\")\nplotName <- removeSpaces(plotName)\ncat(\"Saving\", plotName,\"\\n\")\n#ggsave(plotName,p1)\nprint(paste(expName,\n            \"Success = \",success, \"/\",length(experiments),\"(\",round(success/length(experiments),digits=4)*100,\"%)\", \" | Total verified Success =\", verifiedSuccess, \"/\",length(experiments),\"(\",round(verifiedSuccess/length(experiments),digits=4)*100,\"%) |\",\n            \"HighReliable Success =\",highReliableSuccess,\"/\",highReliableTotal,\"(\",highReliableSuccessRatio,\"%)\\n\"))\n\n #pdf(file=plotName)\n#  grid.arrange(p1,p2,ncol=1)\n#   multiplot(p1,p2, cols=1)\n# dev.off()\n# # \n# pdf(file=\"verify/plots/SetA-reliability.pdf\")\n#   grid.arrange(p10,p11,ncol=2)\n#  dev.off()\n\n#p1 <- p1 + text(x=0, y=-50, \"HighSuccess = this\") + scale_fill_brewer(\"Verdict\",palette=\"Paired\")\n\n\nif(FALSE) \n{\n  comparison <- data.frame()\n  comparison <- rbind(comparison, data.frame(type=\"noVerify\", verdict=\"success\", count=success))\n  comparison <- rbind(comparison, data.frame(type=\"noVerify\", verdict=\"fail\", count=(length(experiments)-success)))\n  comparison <- rbind(comparison,data.frame(type=\"withVerify\", verdict=\"success\", count=verifiedSuccess))\n  comparison <- rbind(comparison,data.frame(type=\"withVerify\", verdict=\"fail\", count=(length(experiments)-verifiedSuccess)))\n    \n  p2 <- ggplot(comparison, aes(x=type, y=count, fill=verdict)) \n  p2 <- p2 + geom_bar(stat=\"identity\") + ylab(\"Number Of Experiments\")\n  print(p)\n  \n  multiplot(p1,p2, cols=2)\n}\n\n# scale_fill_manual(name=\"Verdict\", values=brewer.pal(2,\"Paired\"), guide=guide_legend(reverse=TRUE))\n# p <- p + theme(panel.background=element_rect(fill=\"#F0F0F0\"))\n# c(\"#F45F5A\", \"blue\")\n# \n###################################################################################################################\n# library(\"plyr\")\n# plied <- ddply (analyse, .(expNo), summarize,\n#                 maxJointProb = max(jointProb),\n#                 verdict = function(DF) {DF[DF$jointProb == max(DF$jointProb),]$isCorrect} )\n#                 //verdict = subset(isCorrect,jointProb==maxJointProb))\n# plied2 <- ddply (analyse, .(expNo), summarize,\n#                 maxJointProb = max(jointProb),\n#                 verdict = isCorrect)\n\n# p <- ggplot(subset(analyse, expNo %in% truePositive & Rank == 1 & verifyRank ==1), aes(y=jointProb, x=expNo))\n# p <- p + geom_point(size=1)\n# print(p)\n# \n# maxJPDF <- data.frame()\n# for (e in unique(analyse$expNo)) {\n#   xDF <- subset (analyse, expNo == e)\n#   xDF <- xDF[xDF$jointProb == max(xDF$jointProb),]\n#   maxJPDF <- rbind(maxJPDF,xDF)\n# }\n# p <- ggplot(maxJPDF, aes(y=jointProb, x=expNo, color=isCorrect))\n# p <- p + geom_point(size=1) + facet_grid(~match)\n# print(p)\n# \n# p <- ggplot(maxJPDF, aes(x=prob, fill=match))\n# p <- p + geom_histogram() + facet_wrap(~isCorrect,ncol=1, nrow=2) +ggtitle (\"title\")\n# print(p)\n\n\n# theme_update(axis.title.x = element_text(size = 12, vjust = -0.25),\n#              axis.title.y = element_text(size = 12, angle = 90, vjust = 0.25),\n#              axis.text.x = element_text(size = 11),\n#              axis.text.y = element_text(size = 11),\n#              panel.background = element_blank(),\n#              panel.grid.major = element_line(colour = \"grey90\"),\n#              legend.position = \"right\",\n#              legend.box = \"horizontal\",\n#              legend.key = element_blank(), \n#              legend.background = element_rect(fill=\"white\", size=0.25),\n#              legend.text = element_text(size=10))",
    "created" : 1405694059243.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4186319372",
    "id" : "6C7597D6",
    "lastKnownWriteTime" : 1416243536,
    "last_content_update" : 0,
    "path" : "~/phd/R/probabilisticSeq/countVerify.R",
    "project_path" : "countVerify.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}