{
    "collab_server" : "",
    "contents" : "###\n## \tcountProbResults.R 01.11.2013 oergin\n# \tcounts results from files that contain sequences\n# \tv2 - Works without modification.\n### ------\n\nsource(\"configuration.R\")\n\n# Below are obtained from configuration.R\n#\n#\tTruth<-c(16,138,96,141,92,145,88,147,10,153);\n#\trefnode <- 16\n#\tnumnodes <- 10\n# Truth <- rev(Truth)\nWD <- getwd()\nsetwd (outputDirectory) # from configuration.R\n\nfiles <- Sys.glob(\"probabilitySeqDF*txt\")\n#print(files)\n\ntotalSuccess <- 0\ntotalChecks <- 0\n\nfailSequences <- matrix(data = NA, nrow = 0, ncol = 1+numnodes, byrow = TRUE, dimnames = list(NULL,c(\"ExpNo\",paste(\"N\",1:numnodes,sep=\"\"))))\nfailRealIndexes <- c()\n\nTrustColumns <- c(\"expNo\",\"verdict\",\"P1\",\"P2\",\"NP1\",\"NP2\",\"NPdiff\") # NP: Normalized Probability\nTrust <- matrix(data = NA, nrow = length(files), ncol = length(TrustColumns), byrow = TRUE, dimnames = list(NULL,TrustColumns))\n\nJointPcolumns <- c(\"expNo\",\"verdict\",\"rank\",paste(\"JP\",1:numnodes,sep=\"\"))\nmaxRankLevel <- 2\nJointP <- matrix(data = NA, nrow = length(files)*maxRankLevel, ncol = length(JointPcolumns), byrow = TRUE, dimnames = list(NULL,JointPcolumns))\n  \n#Error matrix\nErrorMatrix <- matrix (data=NA, nrow=length(files), ncol=2, byrow=TRUE, dimnames=list(NULL,c(\"expNo\",\"maxError\")))\n\n#Trust icin kullanilacak degerler burada.\nPsOfBestSeqscolumns <- c(\"expNo\",\"verdict\",\"rank\",paste(\"P\",1:numnodes,sep=\"\"))\nPsOfBestSeqs <- matrix(data = NA, nrow = length(files)*maxRankLevel, ncol = length(PsOfBestSeqscolumns), byrow = TRUE, dimnames = list(NULL,PsOfBestSeqscolumns))\n\ni <- 0\n\nfor (resultFile in files)\n{\n  i <- i+1\n  \n  expNo <- as.numeric(gsub(\"\\\\D\", \"\", resultFile))\n  \n  probabilitiesDF_FILE <- paste(\"probabilitiesDF\",expNo,\".txt\",sep=\"\")\n\t\n  probabilitySeqDF <- read.table(resultFile, header=TRUE)\n  probabilitiesDF <- read.table(probabilitiesDF_FILE, header=TRUE)\n  \n  pOrder <- with(probabilitySeqDF,order(-prob))\n  probabilitySeqDF <- probabilitySeqDF[pOrder,] #ordered\n  probabilitiesDF <- probabilitiesDF[pOrder,] #ordered according to P of above\n\t## RESULT\n\t#winningSequence <- probabilitySeqDF[which.max(probabilitySeqDF$prob),1:numnodes] \n\twinningSequence <- probabilitySeqDF[1,1:numnodes]\n\tverdict <- all(winningSequence == Truth)\n\tprint(probabilitySeqDF[which.max(probabilitySeqDF$prob),]); cat(\"Winner is:\", verdict,\"\\n\"); \n\tif(verdict == TRUE)\n\t{\n\t\ttotalSuccess <- totalSuccess +1\n\t}\n\telse {\n\t\tfailSequences <- rbind(failSequences,cbind(\"ExpNo\"=expNo,winningSequence))\n\t\tfailRealIndexes <- c(failRealIndexes,expNo)\n\t}\n\t\n  #Compute 1D Position Error:\n  Error <- c()\n  for (p in 1:length(Truth))\n  {\n    location.in.winningSequence <- which(winningSequence == Truth[p], arr.ind=FALSE)\n    difference.in.location <- abs(location.in.winningSequence - p)\n    Error <- c(Error, difference.in.location)\n  }\n  ErrorMatrix[i,] <- c(expNo, max(Error))\n\t\t\n\ttotalChecks <- totalChecks +1\n\tcat(\"ExpNo:\",expNo,\"\\nTotalSUCCESS=\",totalSuccess, \"/\",totalChecks,\"=\",totalSuccess/totalChecks, \" in\", length(files),\"files\\n\");\n  \n  # Compute Trust Entity\n  P1 <- probabilitySeqDF[1,\"P\"]\n  P2 <- probabilitySeqDF[2,\"P\"]\n\n  NP1 <- P1/(P1+P2)\n  NP2 <- P2/(P1+P2)\n  NPdiff <- NP1-NP2\n  Trust[i,] <- c(expNo,as.numeric(verdict),P1,P2,NP1,NP2,NPdiff)\n  \n  #Put Winner and best Loser in a matrix\n  for(r in 1:maxRankLevel) {\n    jpList <- c()\n    for (n in 1:numnodes)\n    {\n      jpList <- c(jpList,prod(probabilitiesDF[r,1:n]))\n    }\n    ranksSequence <- probabilitySeqDF[r,1:numnodes]\n    ranksVerdict <- all(ranksSequence == Truth)\n    JointP[(i-1)*maxRankLevel+r,] <- c(expNo,as.numeric(ranksVerdict),r,jpList)\n    PsOfBestSeqs[(i-1)*maxRankLevel+r,] <- c(expNo, as.numeric(ranksVerdict), r, as.numeric(probabilitiesDF[r,]))\n  }\n  \n}\n\nif (length(failRealIndexes) > 0)\n{\n\tfailSequences <- failSequences[order(failSequences[,1]),] #Sort using ExpNo\n\trownames(failSequences)<-1:nrow(failSequences)\n\tfailRealIndexes <- sort(failRealIndexes)\n\t\n\twrite.table(failSequences, file=\"failSequences.txt\", sep=\" \", append=FALSE, col.names=TRUE, row.names=FALSE)\n}\n\ncat (\"Error:\\n\")\nprint(Error)\n\ncat (\"Truth:\\n\")\nprint(Truth)\n\ncat(\"Failed sequences:\",nrow(failSequences),\"\\n\")\nprint (failSequences)\n\ncat(\"Failed experiments:\",length(failRealIndexes),\"\\n\")\nprint(failRealIndexes)\n\ncat(\"TotalSUCCESS=\",totalSuccess, \"/\",totalChecks,\"=\",totalSuccess/totalChecks, \" in\", length(files),\"files\\n\");  # Repeat print\n\n# Write Trust Table into a file\n#Trust <- Trust [with(Trust,order(expNo)),] # Atomic vectorlerle calismiyor galiba\nTrust <- Trust[order(Trust[,\"expNo\"]),]\nTrustFile <- \"Trust.txt\"\nwrite.table(Trust, file=TrustFile, sep=\" \", append=FALSE, col.names=TRUE, row.names=FALSE)\ncat(TrustFile, \"is written..\\n\")\n\nJointP <- JointP[order(JointP[,\"expNo\"]),]\nJointPFile <- \"JointP.txt\"\nwrite.table(JointP, file=JointPFile, sep=\" \", append=FALSE, col.names=TRUE, row.names=FALSE)\ncat(JointPFile,\"is written..\\n\")\n\nPsOfBestSeqs <- PsOfBestSeqs[order(PsOfBestSeqs[,\"expNo\"]),]\nPsOfBestSeqsFile <- \"PsOfBestSeqs.txt\"\nwrite.table(PsOfBestSeqs, file=PsOfBestSeqsFile, sep=\" \", append=FALSE, col.names=TRUE, row.names=FALSE)\ncat(PsOfBestSeqsFile,\"is written..\\n\")\n\ncat(\"Mean of maxError is\", mean(ErrorMatrix[,\"maxError\"]),\"\\n\")\n\nsetwd(WD)\n\n",
    "created" : 1390224781093.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1726127720",
    "id" : "C6CACA4A",
    "lastKnownWriteTime" : 1400495271,
    "last_content_update" : 0,
    "path" : "~/phd/R/probabilisticSeq/countProbResults.R",
    "project_path" : "countProbResults.R",
    "properties" : {
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}