{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(reshape)\n\nlibrary(RColorBrewer)\n\n\nremoveSpaces <- function(...) gsub(\" \",\"\", ... , fixed=TRUE)\nremoveSpaces <- function(...) {a<-gsub(\" \",\"-\", ... , fixed=TRUE); gsub(\",\",\"-\", a , fixed=TRUE)}\n\n# countVerify.R icinde expID'yi comment out et\nsetName <- c()\nsouthAisleNormal <- c(10,18,22,26); setName[1] <- \"South Aisle Normal\"\nsouthAisleReverse <- c(11,19,23,27); setName[2] <- \"Set-A, Right-to-Left\"\n\nsouthWindowNormal <- c(2,20,24,28); setName[3] <- \"South Window Normal\"\nsouthWindowReverse <- c(1,21,25,29); setName[4] <- \"South Window Reverse\"\n\nSetA_Qx_Normal <- c(10,30,31,32); setName [5] <- \"Set-A, Left-to-Right, Qx\"\nSetA_Qx_Reverse <- c(11,33,34,35); setName [6] <- \"Set-A, Right-to-Left, Qx\"\n\nSetC_Qx_Normal <- c(2,36,37,38); setName [7] <- \"Set-C, Left-to-Right, Qx\"\nSetC_Qx_Reverse <- c(1,39,40,41); setName [8] <- \"Set-C, Right-to-Left, Qx\"\n\nsets <- SetC_Qx_Normal\nsName <- setName[7]\n\nnVerdicts <- data.frame()\n\nfor (set in sets){\n  expID <- set\n  source(\"countVerify.R\")\n  nVerdicts <- rbind(nVerdicts, finalVerdicts)\n}\n\nnVerdicts$numPackets <- factor(nVerdicts$numPackets, levels=sort(unique(nVerdicts$numPackets)))\n\nnVerdicts$numPackets <- factor(nVerdicts$numPackets, levels=c(\"40\",\"Q50\",\"Q90\", \"Q100\"))\n\np1 <- ggplot(nVerdicts, aes(x=reliability, fill=isCorrect))\np1 <- p1 + geom_bar() + scale_y_continuous(\"Number Of Experiments\", limits=c(0,2000))\np1 <- p1 + scale_fill_manual2() + guides(fill=guide_legend(reverse=TRUE))\np1 <- p1 + ggtitle(paste(sName,\"\\n packets per Channel:\")) + theme(panel.background=element_rect(fill=\"#FAFAFA\"), plot.title=element_text(size=20), strip.text.x = element_text(size = 16), axis.text.x = element_text(size = 14, color = \"black\", angle = 45))\np1 <- p1 + scale_x_discrete(drop=FALSE)\np1 <- p1+facet_wrap(~numPackets, ncol=4)\n#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom=\"text\", position=\"identity\") # add text above bars\nprint(p1)\n\n\n# Time Lapse of nPacket comparison\nfileName <- paste(\"verify/plots/3-levels-highExclusive/\",removeSpaces(sName),\"-nPackets.pdf\", sep=\"\")\n#ggsave(fileName,p1)\n\n#nVerdicts$reliability <- factor(nVerdicts$reliability, levels=c(\"high\",\"medium\", \"low\"))\np2 <- ggplot(nVerdicts, aes(x=expNo, y=numPackets, fill=reliability))\np2 <- p2 + geom_tile(width=1)\n# Add plainFails:\n#p2 <- p2 + geom_tile(data=plainFail, aes(x=expNo, y=\"plainFail\", fill=isCorrect))\n#p2 <- scale_y_discrete(limits=c(\"a\",\"b\",\"c\",\"d\"))\np2 <- p2 + scale_fill_brewer(\"Verdict\", palette=5) + guides(fill=guide_legend(reverse=TRUE))\np2 <- p2 + ggtitle(sName) + theme(panel.background=element_rect(fill=\"#FAFAFA\"), plot.title=element_text(size=10))\np2 <- p2 + scale_y_discrete(drop=FALSE)\nprint(p2)\n\nfileName <- paste(\"verify/plots/3-levels-highExclusive/\",removeSpaces(sName),\"-nPackets-perExp.pdf\", sep=\"\")\n#ggsave(fileName,p2)\n\ndataNames <- c(\"1\",\"8\",\"16\",\"40\");\nsetA.nPacket <- matrix(data = c(\n                                2000,1860,    # 1 Packet\n                                2000,1903,    # 8\n                                2000, 1905,   # 16\n                                2000, 1871   # 40  \n                              ),\n                              ncol = 2, byrow = TRUE, \n                              dimnames = list(dataNames,     # Rownames\n                                              c(\"LeftToRight\", \"RightToLeft\"))                  # Colnames\n                              ) \nsName <- \"setA\"\n\nnPacketComparison <- melt(round((setA.nPacket/2000)*100,2))\n\n\nsetC.nPacket <- matrix(data = c(\n                                1474,1054,    # 1 Packet\n                                1373,1182,    # 8\n                                1360, 1191,   # 16\n                                1348, 1201   # 40  \n                              ),\n                              ncol = 2, byrow = TRUE, \n                              dimnames = list(dataNames,     # Rownames\n                                              c(\"LeftToRight\", \"RightToLeft\"))                  # Colnames\n                              )\nsName <-\"setC\"\n\nnPacketComparison <- melt(round((setC.nPacket/2000)*100,2))\n\nsetC.MDSvsPNSD <- matrix(data = c(\n  514,1054,    # 1 Packet\n  1066,1182,    # 8\n  1238, 1191,   # 16\n  1450, 1201   # 40  \n),\nncol = 2, byrow = TRUE, \ndimnames = list(dataNames,     # Rownames\n                c(\"MDS\", \"PNSD\"))                  # Colnames\n)\nsName <-\"Set-C [MDS vs PNSD] RightToLeft\"\nnPacketComparison <- melt(round((setC.MDSvsPNSD/2000)*100,2))\n\n# set-A normal\n# 1p: 1984\n# 8p:2000\n# 16p:2000\n# 40p:2000\n# \n# setA.MDSvsPNSD <- matrix(data = c(\n#   1984, 2000,    # 1 Packet\n#   2000, 2000,    # 8\n#   2000, 2000,   # 16\n#   2000, 2000   # 40  \n# ),\n# ncol = 2, byrow = TRUE, \n# dimnames = list(dataNames,     # Rownames\n#                 c(\"MDS\", \"PSDN\"))                  # Colnames\n# )\n# sName <-\"set-A -MDS vs PSND- RightToLeft\"\n# nPacketComparison <- melt(round((setA.MDSvsPNSD/2000)*100,2))\n\ncolnames(nPacketComparison) <- c(\"nPacket\", \"Algorithm\", \"success\")\nnPacketComparison$nPacket <- as.character(nPacketComparison$nPacket)\nnPacketComparison$nPacket <- factor(nPacketComparison$nPacket, levels=dataNames)\nnPacketComparison$Algorithm <- factor(nPacketComparison$Algorithm,levels=c(\"PNSD\",\"MDS\"))\n\ntheme_update(axis.title.x = element_text(size = 20, vjust = -0.25),\n             axis.title.y = element_text(size = 20, angle = 90, vjust = 0.25),\n             axis.text.x = element_text(size = 16, colour = \"black\"),\n             axis.text.y = element_text(size = 16, colour = \"black\"),\n             title = element_text(size=20),\n             panel.background = element_blank(),\n             panel.grid.major = element_line(colour = \"grey90\"),\n             legend.position = \"bottom\",\n             legend.box = \"horizontal\",\n             legend.key = element_blank(), \n             legend.background = element_rect(fill=\"white\", size=0.25),\n             legend.text = element_text(size=18))\n\np3 <- ggplot(nPacketComparison, aes(x=nPacket, y=success, fill=Algorithm))\np3 <- p3 + geom_bar(stat=\"identity\", position=\"dodge\") \n#p3 <- p3 + scale_fill_brewer(palette=\"Paired\") + guides(fill=guide_legend(reverse=FALSE))\np3 <- p3 + scale_fill_manual(name=\"Algorithm\", values = c(\"#253494\",\"#2C7FB8\"))\np3 <- p3 + ggtitle(paste(sName)) + theme(panel.background=element_rect(fill=\"#FAFAFA\"), legend.position=\"bottom\")\np3 <- p3 + scale_x_discrete(name=\"Packets per Channel\") + scale_y_continuous(name=\"Success [%]\")\nprint(p3)\n#p3 <- p3 + facet_wrap(~numPackets, ncol=4)\n#p1 <- p1 + stat_bin(aes(label=(..count..) ), vjust=-0.5, geom=\"text\", position=\"identity\") # add text above bars\n\nfileName <- paste(\"verify/plots/3-levels-highExclusive/\",removeSpaces(sName),\"-nPackets-NO-verify.pdf\", sep=\"\")\nggsave(fileName,p3)\n",
    "created" : 1406318962817.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "735611433",
    "id" : "2B558FBF",
    "lastKnownWriteTime" : 1418744246,
    "last_content_update" : 0,
    "path" : "~/phd/R/probabilisticSeq/joinVerdicts-nPackets.R",
    "project_path" : "joinVerdicts-nPackets.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}